// GENERATED CODE - DO NOT MODIFY BY HAND
//
// This file was generated by the RDF Mapper Generator.
//
// ignore_for_file: unused_import, unnecessary_cast, prefer_const_constructors
// ignore_for_file: unnecessary_brace_in_string_interps, prefer_conditional_assignment
// ignore_for_file: lines_longer_than_80_chars, avoid_redundant_argument_values

import 'package:rdf_mapper/rdf_mapper.dart';

import 'package:solid_task/models/item.dart' as item;
import 'package:solid_task/models/item.rdf_mapper.g.dart' as irmg;

/// Initializes and returns an RdfMapper with mappers registered.
///
/// [rdfMapper] An optional RdfMapper instance to use. If not provided, a new one will be created.
/// Provider parameters:
/// * [storageRootProvider]
RdfMapper initRdfMapper({
  RdfMapper? rdfMapper,
  // Provider parameters
  required String Function() storageRootProvider,
}) {
  if (rdfMapper == null) {
    rdfMapper = RdfMapper.withDefaultRegistry();
  }
  var registry = rdfMapper.registry;

  registry.registerMapper<item.Item>(
      irmg.ItemMapper(storageRootProvider: storageRootProvider));

  return rdfMapper;
}
